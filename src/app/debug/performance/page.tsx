import { PerformanceDashboard } from '@/components/debug/PerformanceDashboard';

export default function PerformanceDebugPage() {
    return (
        <div className="container mx-auto px-4 py-8">
            <div className="mb-8">
                <h1 className="text-3xl font-bold mb-2">ğŸš€ Performance Monitor</h1>
                <p className="text-gray-600">
                    Surveillance en temps rÃ©el des performances de l'API Qloo et du systÃ¨me de cache.
                </p>
            </div>

            <div className="mb-6 p-4 bg-blue-50 rounded-lg">
                <h2 className="text-lg font-semibold mb-2">ğŸ“Š AmÃ©liorations apportÃ©es</h2>
                <ul className="space-y-1 text-sm">
                    <li>âœ… Cache timeout augmentÃ© de 5min Ã  1h</li>
                    <li>âœ… ClÃ©s de cache optimisÃ©es (groupement par dÃ©cennie d'Ã¢ge)</li>
                    <li>âœ… Traitement par lots prioritaires</li>
                    <li>âœ… Nettoyage automatique du cache expirÃ©</li>
                    <li>âœ… Monitoring de performance intÃ©grÃ©</li>
                    <li>âœ… Timeout des requÃªtes rÃ©duit de 10s Ã  8s</li>
                </ul>
            </div>

            <PerformanceDashboard />

            <div className="mt-8 p-4 bg-yellow-50 rounded-lg">
                <h2 className="text-lg font-semibold mb-2">ğŸ’¡ Conseils d'optimisation</h2>
                <ul className="space-y-1 text-sm">
                    <li>â€¢ Un cache hit rate {'>'} 40% indique une bonne optimisation</li>
                    <li>â€¢ Les temps de rÃ©ponse moyens devraient Ãªtre {'<'} 2000ms</li>
                    <li>â€¢ Surveillez la taille du cache pour Ã©viter une consommation mÃ©moire excessive</li>
                    <li>â€¢ Les requÃªtes par lots rÃ©duisent la charge sur l'API Qloo</li>
                </ul>
            </div>
        </div>
    );
}